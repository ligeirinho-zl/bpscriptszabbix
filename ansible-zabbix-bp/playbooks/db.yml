- hosts: database
  vars_files:
    - ../vars/db.yml
    - ../vars/urls.yml
  tasks:
    # update repos if cache is empty role not update
    - block:
        - name: Update repos and install psycopg2
          ansible.builtin.apt:
            name: python3-psycopg2
            update_cache: yes
          when: ansible_os_family == "Debian"

        - name: Update repos and install psycopg2
          ansible.builtin.yum:
            name: python3-psycopg2
            update_cache: yes
          when: ansible_os_family == "RedHat"
      become: true

    - name: Include role postgre
      ansible.builtin.include_role:
        name: galaxyproject.postgresql
        apply:
          become: yes
          become_user: root
      vars:
        postgresql_version: "{{ postgre_version }}"
        postgresql_conf:
          # Memory Configuration
          - shared_buffers: "'2GB'"
          - effective_cache_size: "'6GB'"
          - work_mem: "'14MB'"
          - maintenance_work_mem: "'410MB'"
          # Checkpoint Related Configuration
          - min_wal_size: "'2GB'"
          - max_wal_size: "'3GB'"
          - checkpoint_completion_target: 0.5
          - wal_buffers: -1
          # Storage Configuration
          - random_page_cost: 1.1
          - effective_io_concurrency: 200
          # Worker Processes Configuration
          - max_worker_processes: 8
          - max_parallel_workers_per_gather: 2
          - max_parallel_workers: 2
          # General config
          - listen_addresses: "'*'"
          - max_connections: 200
        postgresql_pg_hba_conf:
          - host all all {{ vpc_netmask }} md5
          - host all {{ postgre_adm_user }} 0.0.0.0/0 md5

    - name: Restart PostgreSQL
      become: yes
      service: name={{ postgresql_service_name }} state=restarted

    - name: Create user admin
      become: yes
      ansible.builtin.shell: |
        su postgres -c "psql -c \"CREATE USER {{ postgre_adm_user }} WITH SUPERUSER PASSWORD '{{ postgre_adm_password }}';\""
        su postgres -c "psql -c 'GRANT ALL PRIVILEGES ON DATABASE postgres TO {{ postgre_adm_user }};'"

    - name: Create Database Zabbix
      community.postgresql.postgresql_db:
        name: "{{ postgre_zbx_database_name }}"
        login_host: "{{ postgre_host }}"
        login_user: "{{ postgre_adm_user }}"
        login_password: "{{ postgre_adm_password }}"
        port: "{{ postgre_port }}"

    - name: Create Zabbix DB User
      community.postgresql.postgresql_user:
        name: "{{ postgre_zbx_user }}"
        db: "{{ postgre_zbx_database_name }}"
        password: "{{ postgre_zbx_password }}"
        login_host: "{{ postgre_host }}"
        login_user: "{{ postgre_adm_user }}"
        login_password: "{{ postgre_adm_password }}"
        port: "{{ postgre_port }}"
        comment: Zabbix connection User

    - name: Create Database Grafana
      community.postgresql.postgresql_db:
        name: "{{ postgre_grafana_database_name }}"
        login_host: "{{ postgre_host }}"
        login_user: "{{ postgre_adm_user }}"
        login_password: "{{ postgre_adm_password }}"
        port: "{{ postgre_port }}"

    - name: Create Grafana DB User
      community.postgresql.postgresql_user:
        name: "{{ postgre_grafana_user }}"
        db: "{{ postgre_grafana_database_name }}"
        password: "{{ postgre_grafana_password }}"
        login_host: "{{ postgre_host }}"
        login_user: "{{ postgre_adm_user }}"
        login_password: "{{ postgre_adm_password }}"
        port: "{{ postgre_port }}"
        comment: Grafana connection User
